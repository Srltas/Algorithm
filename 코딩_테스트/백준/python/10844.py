"""
문제
45656이란 수를 보자.

이 수는 인접한 모든 자리의 차이가 1이다. 이런 수를 계단 수라고 한다.

N이 주어질 때, 길이가 N인 계단 수가 총 몇 개 있는지 구해보자. 0으로 시작하는 수는 계단수가 아니다.

입력
첫째 줄에 N이 주어진다. N은 1보다 크거나 같고, 100보다 작거나 같은 자연수이다.

출력
첫째 줄에 정답을 1,000,000,000으로 나눈 나머지를 출력한다.

예제 입력 1 
1
예제 출력 1 
9
예제 입력 2 
2
예제 출력 2 
17
"""

n = int(input())

d = [[0 for i in range(10)] for j in range(101)]
for i in range(1, 10):
    d[1][i] = 1

for i in range(2, n+1):
    for j in range(10):
        if j == 0:
            d[i][j] = d[i-1][1]
        elif j == 9:
            d[i][j] = d[i-1][8]
        else:
            d[i][j] = d[i-1][j-1] + d[i-1][j+1]
        
print(sum(d[n]) % 1000000000)
# 일의 자리수 개수
#    0  1  2  3  4  5  6  7  8  9
# 1  0  1  1  1  1  1  1  1  1  1
# 2  1  1  2  2  2  2  2  2  2  1
# 3  1  3  3  4  4  4  4  4  3  2

# 예를 들어 자리수가 3의 마지막 일의 자리수에 3이 나오기 위해서는 십의 자리수에 2, 4인 경우 가능
# 자리수가 2개인 경우 일의 자리수가 2, 4는 각각 2개씩 존재하므로  자리수가 3개일 때 일의 자리수에 3이 나오는 경우는 총 4가지이다.